apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'application'
apply plugin: 'base'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = "com.angular.demo"
version = "1.0-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
mainClassName = "com.angular.demo.Hello"

sourceSets {
    main {
        java {
            srcDirs =["src/main/java"]
        }
        resources {
           srcDirs = ['src/main/resources']
           exclude "AngularPOCUI"
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

buildscript {
    ext {
        springVersion = "2.4.4"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springVersion}")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.session:spring-session-core'
}

clean {
    delete = ["src/main/resources/public" ,"${projectDir}/build"]
}

build {
    doFirst {
        exec {
            workingDir "${projectDir}/src/main/resources/AngularPOCUI/"
            if (System.getProperty('os.name').toLowerCase().contains('windows')) {
                executable = "ng.cmd"
                args = ["build"]
            } else {
                executable = "ng"
                args = ["build"]
            }
        }
    }
    doLast {
        copy {
            from "src/main/resources/public/"
            into "${buildDir}/resources/public/"
        }
    }
}

//jar {
//    from ("${buildDir}/resources/public") {
//        into("META_INF/resources/public")
//    }
//    manifest {
//        attributes(
//          'Implementation-Title': 'Analytics Library',
//            'Implementation-Version': '1.2',
//            'Manifest-Version': '1.0',
//            'Main-Class': 'com.angular.demo.Hello'
//    )}
//}

jar {
    archiveName("AngularGradlePOC")
    exclude("*.jar")
    exclude("lib")
    processResources {
        from ("resources/public") into("META_INF/resources/public")
    }
    manifest {
        attributes(
//            'API-Title': IMPLEMENTATION-TITLE,
//            'API-Artifact-Identifier': ARTIFACT-ID,
//            'API-Group-Identifier': GROUP-ID,
            'Implementation-Version': '1.2',
            'Manifest-Version': '1.0',
            'Main-Class': 'com.angular.demo.Hello'
        )}
}

//task cleanAngular(type: Delete) {
//  delete "${projectDir}/src/main/resources/public/"
//}
//clean.dependsOn("cleanAngular")


//task copyResources(type: Copy) {
//    from "${projectDir}/src/main/resources/public/"
//    into "${projectDir}/build/resources/public/"
//}

//task buildAngular(type: Exec) {
//    workingDir "${projectDir}/src/main/resources/AngularPOCUI/"
//    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
//        executable = "ng.cmd"
//        args = ["build"]
//    } else {
//        executable = "ng"
//        args = ["build"]
//    }
//}

//task cleanAngular(type: Delete) {
//  delete "${projectDir}/src/main/resources/public/"
//}
//clean.dependsOn("cleanAngular")